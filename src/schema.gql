# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Product {
  id: Int!
  productName: String!
  productCode: String!
  description: String!
  price: Float!
  starRating: Float!
  imageUrl: String!
  suppliersId: String!
}

type ComponentsValue {
  id: Int!
  data: JSON!
  collectionId: Int!
  collection: Collection!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Collection {
  id: Int!
  collectionName: String!
  components: [Component!]!
  componentsValue: [ComponentsValue!]!
}

type Component {
  id: Int!
  htmlInputType: String!
  dataType: String!
  name: String!
  componentId: String
  label: String
  collectionId: Int!
  collection: Collection!
}

type Query {
  findAllProduct(FilterOptions: ProductFilterInput!): [Product!]!
  findOneProduct(id: Int!): Product!
  searchProduct(search: ProductSearchInput!): [Product!]!
  findAllComponents: [Component!]!
  findAllComponentsByCollectionId(collectionID: Int!): [Component!]!
  findOnecomponent(id: Int!): Component!
  FindAllCollection: [Collection!]!
  collectionFindOne(id: Int!): Collection!
  GetCollectionData(id: Int!): ComponentsValue!
}

input ProductFilterInput {
  page: Float = 1
  limit: Float = 10
  sort: Sort = ASC
  orderBy: OrderBy = ID
}

"""Sort Options"""
enum Sort {
  ASC
  DESC
}

"""Order By Options"""
enum OrderBy {
  ID
  NAME
  CODE
  PRICE
  STAR
  SUPPLIER
}

input ProductSearchInput {
  productName: String = ""
  filterOptions: ProductFilterInput
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createComponent(createComponentInput: CreateComponentInput!): Component!
  updateComponent(updateComponentInput: UpdateComponentInput!): Component!
  removeComponent(id: Int!): Component!
  createCollection(createCollectionInput: CreateCollectionInput!): Collection!
  updateCollection(updateCollectionInput: UpdateCollectionInput!): Collection!
  removeCollection(id: Int!): Collection!
  createComponentsValue(createComponentsValueInput: CreateComponentsValueInput!): ComponentsValue!
  updateComponentsValue(updateComponentsValueInput: UpdateComponentsValueInput!): ComponentsValue!
  removeComponentsValue(id: Int!): ComponentsValue!
}

input CreateProductInput {
  productName: String!
  productCode: String!
  description: String
  price: Float!
  starRating: Float
  imageUrl: String
  suppliersId: String
}

input UpdateProductInput {
  productName: String
  productCode: String
  description: String
  price: Float
  starRating: Float
  imageUrl: String
  suppliersId: String
  id: Float!
}

input CreateComponentInput {
  htmlInputType: HTMLInputType! = TEXT
  dataType: DataType! = STRING
  name: String!
  collectionId: Int!
  componentId: String
  label: String
}

"""HTML Input Types """
enum HTMLInputType {
  DATE
  EMAIL
  NUMBER
  PASSWORD
  TEXT
  TIME
  FILE
  CHECKBOX
}

"""Data Types """
enum DataType {
  STRING
  NUMBER
  BOOLEAN
  DATE
}

input UpdateComponentInput {
  id: Int!
  collectionId: Int!
  dataType: HTMLInputType
  htmlInputType: HTMLInputType
  name: String
  componenId: String
  label: String
}

input CreateCollectionInput {
  collectionName: String!
}

input UpdateCollectionInput {
  collectionName: String!
}

input CreateComponentsValueInput {
  data: JSON!
  collectionId: Int!
}

input UpdateComponentsValueInput {
  id: Int!
  data: JSON!
  collectionId: Int
}